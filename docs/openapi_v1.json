{
  "openapi": "3.0.3",
  "info": {
    "title": "Laratchi",
    "description": "API V1 specification\n\n## Request data format\n\nAPI expects `multipart/form-data` or `application/x-www-form-urlencoded` on every input and produces `application/json` on most outputs\n\n### JSON to form conversions\n\n#### Boolean\n\n`true` -> `'1'`\n\n`false` -> `'0'`\n\n#### Number\n\n`Number` -> `String`\n\n#### Null\n\n`null` -> `''` (empty string)\n\n#### Object and Array\n\nEncode using exploded and deep object format\n\n\n`{data: [{title: 'a'},{title: 'b'}]}` -> `?data[0][title]=a&data[1][title]=b`\n\nEmpty arrays encode as null\n\n`[]` -> `''` (empty string)\n\nEmpty objects encode as null\n\n`{}` -> `''` (empty string)",
    "version": "0.1.0",
    "contact": {
      "name": "Tomáš Chochola",
      "url": "https://github.com/tomchochola/laratchi",
      "email": "chocholatom1997@gmail.com"
    }
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "security": [
    {},
    {
      "bearer": []
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Auth system"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register new user",
        "description": "Register and login new user\n\nUser must not be authenticated\n\nThrottled",
        "operationId": "post_auth_register",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "request data",
                "type": "object",
                "required": ["name", "email", "password", "password_confirmation", "locale"],
                "properties": {
                  "name": {
                    "description": "user full name",
                    "type": "string",
                    "pattern": ".+",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "email": {
                    "description": "unique e-mail",
                    "type": "string",
                    "format": "email",
                    "pattern": ".+",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "password": {
                    "$ref": "#/components/schemas/password"
                  },
                  "password_confirmation": {
                    "$ref": "#/components/schemas/password"
                  },
                  "locale": {
                    "$ref": "#/components/schemas/locale"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Me"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "427": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Log in user",
        "description": "Log in user\n\nUser must not be authenticated\n\nThrottled",
        "operationId": "post_auth_login",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "request data",
                "type": "object",
                "required": ["email", "password", "remember"],
                "properties": {
                  "email": {
                    "description": "e-mail",
                    "type": "string",
                    "format": "email",
                    "pattern": ".+",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "password": {
                    "$ref": "#/components/schemas/password"
                  },
                  "remember": {
                    "description": "remember login",
                    "type": "integer",
                    "enum": [0, 1]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Me"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "427": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    },
    "/auth/logout/current": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout current device",
        "description": "Logout current device\n\nUser must be authenticated",
        "operationId": "post_auth_logout_current",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    },
    "/auth/logout/other": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout other devices",
        "description": "Logout other devices\n\nUser must be authenticated\n\nThrottled",
        "operationId": "post_auth_logout_other",
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "request data",
                "type": "object",
                "properties": {
                  "password": {
                    "$ref": "#/components/schemas/password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Me"
          },
          "401": {
            "$ref": "#/components/responses/4xx"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/auth/email_verification/resend": {
      "post": {
        "tags": ["auth"],
        "summary": "Resend e-mail verification",
        "description": "Resend e-mail verification notification\n\nUser must be authenticated\n\nThrottled",
        "operationId": "post_auth_email_verification_resend",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/4xx"
          },
          "403": {
            "$ref": "#/components/responses/4xx"
          },
          "429": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    },
    "/auth/email_verification/verify/{id}/{hash}": {
      "post": {
        "tags": ["auth"],
        "summary": "Verify e-mail",
        "description": "Verify e-mail via link from e-mail\n\nUser must be authenticated\n\nThrottled",
        "operationId": "post_auth_email_verification_verify_id_hash",
        "parameters": [
          {
            "description": "user id",
            "name": "id",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/slug"
            },
            "required": true
          },
          {
            "description": "verification hash",
            "name": "hash",
            "in": "path",
            "schema": {
              "type": "string",
              "pattern": ".+",
              "minLength": 1,
              "maxLength": 255
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/4xx"
          },
          "403": {
            "$ref": "#/components/responses/4xx"
          },
          "429": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    },
    "/auth/password/forgot": {
      "post": {
        "tags": ["auth"],
        "summary": "Send password forgot e-mail",
        "description": "Send password forgot e-mail\n\nUser must not be authenticated\n\nThrottled",
        "operationId": "post_auth_password_forgot",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "request data",
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "description": "e-mail",
                    "type": "string",
                    "format": "email",
                    "pattern": ".+",
                    "minLength": 1,
                    "maxLength": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "427": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    },
    "/auth/password/reset": {
      "post": {
        "tags": ["auth"],
        "summary": "Reset password",
        "description": "Reset password and login user\n\nUser must not be authenticated\n\nThrottled",
        "operationId": "post_auth_password_reset",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "request data",
                "type": "object",
                "required": ["email", "token", "password", "password_confirmation"],
                "properties": {
                  "email": {
                    "description": "e-mail",
                    "type": "string",
                    "format": "email",
                    "pattern": ".+",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "token": {
                    "description": "token",
                    "type": "string",
                    "pattern": ".+",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "password": {
                    "$ref": "#/components/schemas/password"
                  },
                  "password_confirmation": {
                    "$ref": "#/components/schemas/password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Me"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "427": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    },
    "/auth/password/update": {
      "post": {
        "tags": ["auth"],
        "summary": "Update password",
        "description": "Update password\n\nUser must be authenticated\n\nThrottled",
        "operationId": "post_auth_password_update",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "request data",
                "type": "object",
                "required": ["password", "new_password", "new_password_confirmation"],
                "properties": {
                  "password": {
                    "$ref": "#/components/schemas/password"
                  },
                  "new_password": {
                    "$ref": "#/components/schemas/password"
                  },
                  "new_password_confirmation": {
                    "$ref": "#/components/schemas/password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Me"
          },
          "401": {
            "$ref": "#/components/responses/4xx"
          },
          "422": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["auth"],
        "summary": "Get currently authenticated user",
        "description": "Get currently authenticated user\n\n200 -> Authenticated, 204 -> Unauthenticated",
        "operationId": "get_auth_me",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Me"
          },
          "204": {
            "description": "User is not authenticated"
          }
        }
      }
    },
    "/auth/me/update": {
      "post": {
        "tags": ["auth"],
        "summary": "Update currently authenticated user",
        "description": "Update currently authenticated user\n\nUser must be authenticated\n\nThrottled if updating credentials",
        "operationId": "post_auth_me_update",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "request data",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "user full name",
                    "type": "string",
                    "pattern": ".+",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "email": {
                    "description": "unique e-mail",
                    "type": "string",
                    "format": "email",
                    "pattern": ".+",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "locale": {
                    "$ref": "#/components/schemas/locale"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Me"
          },
          "401": {
            "$ref": "#/components/responses/4xx"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/auth/me/destroy": {
      "post": {
        "tags": ["auth"],
        "summary": "Destroy currently authenticated user",
        "description": "Destroy currently authenticated user\n\nUser must be authenticated",
        "operationId": "post_auth_me_destroy",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/4xx"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "slug": {
        "description": "slug",
        "type": "string",
        "format": "identifier",
        "minLength": 1,
        "maxLength": 255
      },
      "id": {
        "description": "id",
        "type": "integer",
        "minimum": 1,
        "maximum": 9223372036854775807
      },
      "nullableId": {
        "description": "id or null",
        "type": "integer",
        "minimum": 1,
        "maximum": 9223372036854775807,
        "nullable": true
      },
      "password": {
        "description": "password",
        "type": "string",
        "format": "password",
        "pattern": ".+",
        "minLength": 8,
        "maxLength": 1024
      },
      "locale": {
        "description": "locale",
        "type": "string",
        "enum": ["cs", "en"]
      },
      "timestamp": {
        "description": "timestamp",
        "type": "string",
        "format": "date-time"
      },
      "nullableTimestamp": {
        "description": "timestamp or null",
        "type": "string",
        "format": "date-time",
        "nullable": true
      },
      "Resource": {
        "description": "json:api resource",
        "type": "object",
        "required": ["id", "slug", "type"],
        "properties": {
          "id": {
            "description": "id",
            "type": "string",
            "format": "identifier"
          },
          "slug": {
            "description": "slug",
            "type": "string",
            "format": "identifier"
          },
          "type": {
            "description": "type",
            "type": "string"
          },
          "meta": {
            "description": "meta",
            "type": "object"
          }
        }
      },
      "Relationship": {
        "description": "json:api relationship",
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Resource"
          }
        }
      },
      "NullableRelationship": {
        "description": "json:api nullable relationship",
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Resource"
              },
              {
                "type": "object",
                "nullable": true
              }
            ]
          }
        }
      },
      "Relationships": {
        "description": "json:api relationships",
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "description": "json:api resources",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          }
        }
      },
      "Me": {
        "description": "me schema",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "required": ["attributes"],
            "properties": {
              "attributes": {
                "description": "attributes",
                "type": "object",
                "required": ["name", "email", "locale", "email_verified_at"],
                "properties": {
                  "name": {
                    "description": "user full name",
                    "type": "string"
                  },
                  "email": {
                    "description": "e-mail",
                    "type": "string",
                    "format": "email"
                  },
                  "locale": {
                    "$ref": "#/components/schemas/locale"
                  },
                  "email_verified_at": {
                    "$ref": "#/components/schemas/nullableTimestamp"
                  }
                }
              },
              "relationships": {
                "description": "relationships",
                "type": "object",
                "properties": {
                  "database_token": {
                    "$ref": "#/components/schemas/Relationship"
                  }
                }
              }
            }
          }
        ]
      },
      "DatabaseToken": {
        "description": "database token schema",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "required": ["attributes"],
            "properties": {
              "attributes": {
                "description": "attributes",
                "type": "object",
                "required": ["provider", "auth_id"],
                "properties": {
                  "provider": {
                    "description": "user provider name",
                    "type": "string"
                  },
                  "auth_id": {
                    "description": "authenticatable id",
                    "type": "string"
                  },
                  "bearer": {
                    "description": "bearer token",
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "Error": {
        "description": "generic error",
        "type": "object",
        "required": ["status", "code"],
        "properties": {
          "internal": {
            "description": "debug only message, internal use only, do not expose to users!",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code",
            "type": "integer"
          },
          "code": {
            "description": "error code",
            "type": "integer"
          }
        }
      },
      "ValidationError": {
        "description": "validation error",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "description": "validation errors",
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "description": "computer readable validation error, do not expose to users!",
                    "type": "string",
                    "enum": [
                      "isin",
                      "iban",
                      "bic",
                      "hexcolor",
                      "creditcard",
                      "isbn",
                      "username",
                      "htmlclean",
                      "domainname",
                      "jwt",
                      "imei",
                      "macaddress",
                      "slug",
                      "semver",
                      "luhn",
                      "base64",
                      "issn",
                      "lowercase",
                      "uppercase",
                      "titlecase",
                      "snakecase",
                      "kebabcase",
                      "camelcase",
                      "cidr",
                      "datauri",
                      "ulid",
                      "ean",
                      "gtin",
                      "postalcode",
                      "mimetype",
                      "authorized",
                      "enum",
                      "model_ids",
                      "country_code",
                      "currency",
                      "delimited_unique",
                      "delimited_min:{{ min }}",
                      "delimited_max:{{ max }}",
                      "auth_failed",
                      "auth_password",
                      "auth_throttle:{{ seconds }}",
                      "auth_blocked",
                      "passwords_reset",
                      "passwords_sent",
                      "passwords_throttled",
                      "passwords_token",
                      "passwords_user",
                      "accepted",
                      "accepted_if:{{ attribute }};{{ value }}",
                      "active_url",
                      "after:{{ value or attribute }}",
                      "after_or_equal:{{ value or attribute }}",
                      "alpha",
                      "alpha_dash",
                      "alpha_num",
                      "array",
                      "before:{{ value or attribute }}",
                      "before_or_equal:{{ value or attribute }}",
                      "between_array:{{ min }};{{ max }}",
                      "between_file:{{ min }};{{ max }}",
                      "between_numeric:{{ min }};{{ max }}",
                      "between_string:{{ min }};{{ max }}",
                      "boolean",
                      "confirmed",
                      "current_password",
                      "date",
                      "date_equals:{{ value or attribute }}",
                      "date_format:{{ format }}",
                      "declined",
                      "declined_if:{{ attribute }};{{ value }}",
                      "different:{{ attribute }}",
                      "digits:{{ digits }}",
                      "digits_between:{{ min }};{{ max }}",
                      "dimensions",
                      "distinct",
                      "doesnt_end_with:{{ ', ' separated values }}",
                      "doesnt_start_with:{{ ', ' separated values }}",
                      "email",
                      "ends_with:{{ ', ' separated values }}",
                      "exists",
                      "file",
                      "filled",
                      "gt_array:{{ value or attribute}}",
                      "gt_file:{{ value or attribute}}",
                      "gt_numeric:{{ value or attribute}}",
                      "gt_string:{{ value or attribute}}",
                      "gte_array:{{ value or attribute}}",
                      "gte_file:{{ value or attribute}}",
                      "gte_numeric:{{ value or attribute}}",
                      "gte_string:{{ value or attribute}}",
                      "image",
                      "in",
                      "in_array:{{ attribute }}",
                      "integer",
                      "ip",
                      "ipv4",
                      "ipv6",
                      "json",
                      "lt_array:{{ value or attribute}}",
                      "lt_file:{{ value or attribute}}",
                      "lt_numeric:{{ value or attribute}}",
                      "lt_string:{{ value or attribute}}",
                      "lte_array:{{ value or attribute}}",
                      "lte_file:{{ value or attribute}}",
                      "lte_numeric:{{ value or attribute}}",
                      "lte_string:{{ value or attribute}}",
                      "mac_address",
                      "max_array:{{ max }}",
                      "max_file:{{ max }}",
                      "max_numeric:{{ max }}",
                      "max_string:{{ max }}",
                      "max_digits:{{ max }}",
                      "mimes:{{ ', ' separated values }}",
                      "mimetypes:{{ ', ' separated values }}",
                      "min_array:{{ min }}",
                      "min_file:{{ min }}",
                      "min_numeric:{{ min }}",
                      "min_string:{{ min }}",
                      "min_digits:{{ min }}",
                      "multiple_of:{{ value }}",
                      "not_in",
                      "not_regex",
                      "numeric",
                      "password_letters",
                      "password_mixed",
                      "password_numbers",
                      "password_symbols",
                      "password_uncompromised",
                      "present",
                      "prohibited",
                      "prohibited_if:{{ attribute }};{{ value }}",
                      "prohibited_unless:{{ attribute }};{{ ', ' separated values }}",
                      "prohibits:{{ ' / ' separated attributes }}",
                      "regex",
                      "required",
                      "required_array_keys:{{ ', ' separated values }}",
                      "required_if:{{ attribute }};{{ value }}",
                      "required_unless:{{ attribute }};{{ ', ' separated values }}",
                      "required_with:{{ ' / ' separated attributes }}",
                      "required_with_all:{{ ' / ' separated attributes }}",
                      "required_without:{{ ' / ' separated attributes }}",
                      "required_without_all:{{ ' / ' separated attributes }}",
                      "same:{{ attribute }}",
                      "size_array:{{ value }}",
                      "size_file:{{ value }}",
                      "size_numeric:{{ value }}",
                      "size_string:{{ value }}",
                      "starts_with:{{ ', ' separated values }}",
                      "string",
                      "timezone",
                      "unique",
                      "uploaded",
                      "url",
                      "uuid",
                      "prohibited_with:{{ ', ' separated values }}",
                      "prohibited_with_all:{{ ', ' separated values }}",
                      "prohibited_without:{{ ', ' separated values }}",
                      "prohibited_without_all:{{ ', ' separated values }}",
                      "null_with:{{ ', ' separated values }}",
                      "null_with_all:{{ ', ' separated values }}",
                      "null_without:{{ ', ' separated values }}",
                      "null_without_all:{{ ', ' separated values }}",
                      "strlen:{{ value }}",
                      "strlen_max:{{ max }}",
                      "strlen_min:{{ min }}",
                      "null",
                      "throttled:{{ seconds }}"
                    ]
                  }
                }
              }
            }
          }
        ]
      }
    },
    "responses": {
      "204": {
        "description": "Successful operation"
      },
      "4xx": {
        "description": "Client error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "422": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Me": {
        "description": "Successful operation",
        "content": {
          "application/json": {
            "schema": {
              "description": "response data",
              "type": "object",
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Me"
                },
                "included": {
                  "description": "included relationships",
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/DatabaseToken"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
